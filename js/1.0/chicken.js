function QueryString(item){    var svalue = self.location.search.match(new RegExp("[\?\&]" + item + "=([^\&]*)(\&?)", "i"));    return svalue ? svalue[1] : svalue;}var domain = QueryString("domain");try {    document.domain = domain} catch (e) {}var ie6 = navigator.userAgent.indexOf("MSIE 6") >= 0;function isArray(obj){    return Object.prototype.toString.call(obj) === "[object Array]" || (ie6 && obj.hasOwnProperty("length") && obj.reverse !== undefined);}var xhrPool = (function(){    var pool = [], using = {}, pointer = 0, url = "", max = 3;    function getxhr(){        return window.ActiveXObject ? (ie6 ? new ActiveXObject("Msxml2.XMLHTTP") : new ActiveXObject("Microsoft.XMLHTTP")) : new XMLHttpRequest();    }    function param(a){        var s = [];        function add(key, value){            s[s.length] = encodeURIComponent(key) + '=' + encodeURIComponent(value);        };        for (var j in a) {            if (isArray(a[j]))                 for (var i = 0; i < a[j].length; i++)                     add(j, a[j][i]);            else                 add(j, a[j]);        }        return s.join("&").replace(/%20/g, "+");    }    function getInstance(){        var l = pool.length;        for (var i = 0; i < l; i++) {            if (pool[i] && using[i] !== true && (pool[i].readyState == 4 || pool[i].readyState == 0)) {                using[i] = true;                return i            }        }        var xhr = getxhr(), l = pool.length;        pool.push(xhr);        using[l] = true;        return l;    }    function open(data, fn, scope){        if (xhrPool.suspend)             return false;			        var i = getInstance(), xhr = pool[i];        xhr.open("POST", url, true);        try {            xhr.setRequestHeader("Accept", "application/json, text/javascript, */*");            xhr.setRequestHeader("Cache-Control", "no-cache");            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8");        }         catch (e) {        }        function httpSuccess(){            try {                return (xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || xhr.status == 1223;            }             catch (e) {            }            return false;        }        var status;        xhr.onreadystatechange = function(){            if (xhr && xhr.readyState == 4) {                status = "success";                var resp;                if (httpSuccess()) {                    try {                        resp = window["eval"]("(" + xhr.responseText + ")");                    }                     catch (e) {                        status = "parseerror";                        xhrPool.handleError(status);                    }                    if (status == "success") {                        if (resp == -2)                             xhrPool.handleError(status = "authfail");                        else {                            if (fn) {                                fn.call(scope || window, resp);                            }                        }                    }                }                else                     xhrPool.handleError(status = "timeout");                resp = null;                using[i] = false;            }        };        try {            xhr.send(param(data));        }         catch (e) {            using[i] = false;            xhrPool.handleError(status = "ajaxerror")        }    }    return {        suspend: false,        post: function(data, fn, scope){            open(data, fn, scope);            return this;        },        setUrl: function(str){            url = str;        },        handleError: function(){        },        getInstance: getInstance,        stop: function(){            this.suspend = true;            for (var i = 0; i < pool.length; i++) {                try {                    pool[i].abort()                }                 catch (e) {                }                pool[i] = null;            }            pool.length = 0;        }    }})();